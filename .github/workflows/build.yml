name: Build, Test & Lint

on:
  pull_request:
  push:
    branches: [main]
  schedule:
    - cron: 0 4 * * 1

jobs:
  chrono-test:
    name: "Package chrono: Run Tests"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: chrono/
    strategy:
      matrix:
        sdk: [stable, beta, dev]
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}
      - run: dart pub get
      - run: dart test

  chrono-coverage:
    name: "Package chrono: Coverage"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: chrono/
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
      - run: dart pub get

      - run: dart pub global activate coverage ^1.0.0
      - run: dart pub global run coverage:test_with_coverage

      - uses: codecov/codecov-action@v3

  chrono-lint:
    name: "Package chrono: Lint"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sdk: [stable, beta, dev]
    defaults:
      run:
        working-directory: chrono/
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}
      - run: dart pub get

      - run: dart analyze
  chrono-timezone-compiler-lint:
    name: "Package chrono_timezone_compiler: Lint"
    runs-on: ubuntu-latest
    if: false
    strategy:
      matrix:
        sdk: [stable, beta, dev]
    defaults:
      run:
        working-directory: chrono_timezone_compiler/
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}
      - run: dart pub get
      - run: dart run build_runner build

      - run: dart analyze
